Introduction
------------

This package provides an effective version of infinitary term rewriting,
as described in the paper "Computing with Infinite Terms and Reductions"
by Jeroen Ketema and Jakob Grue Simonsen.

The Haskell code in this package has been tested with version 6.12.3 of
the Glasgow Haskell Compiler (GHC). To obtain GHC, it is best to install
the Haskell Platform:

  http://hackage.haskell.org/platform/

Usage
-----

To experiment with the code, it is best to load either CompressionExamples.hs
(for the compression theorem), ConfluenceExamples.hs (for the confluence
theorem), or ChurchRosserExamples.hs (for the Church-Rosser theorem) in the
interpreter supplied with GHC (ghci). Then, input the examples as described
in the comments of the respective source files.

Structure
---------

The code has been split in several files whose contents should be mostly
obvious from the file names, or otherwise from the initial comments in
each of the files.

Besides employing a recursive data type instead of natural numbers to
represent terms, the code deviates from the paper in that the needed
steps function combines the computation of the prefix-closed subset of
positions of the final term of a reduction and the actual needed step
computation. This is a mere programming convenience, leading to slightly
cleaner code.

Correspondence with the Paper
-----------------------------

The correspondence between the Turing machines defined in the Theorems, Lemmas,
etc of the paper and the functions as present in the code is as follows:

Lemma 1       : substitute     in Substitution.hs
Proposition 2 : subterm        in PositionAndSubterm.hs
Lemma 3       : rewrite_step   in RuleAndSystem.hs
Theorem 5     : compression    in Compression.hs
Proposition 6 : origins_across in RuleAndSystem.hs (across a single step)
Proposition 7 : needed_steps   in Reduction.hs
Theorem 10    : confluence     in Confluence.hs
Lemma 11      : implicit in StripLemma.hs
Lemma 12      : strip_lemma    in StripLemma.hs
Theorem 15    : church_rosser  in ChurchRosser.hs
Lemma 16      : interleave     in ChurchRosser.hs

(End of README)
